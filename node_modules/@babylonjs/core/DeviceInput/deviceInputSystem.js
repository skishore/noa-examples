import { NativeDeviceInputWrapper } from './Implementations/nativeDeviceInputWrapper.js';
import { WebDeviceInputSystem } from './Implementations/webDeviceInputSystem.js';
/**
 * This class will take all inputs from Keyboard, Pointer, and
 * any Gamepads and provide a polling system that all devices
 * will use.  This class assumes that there will only be one
 * pointer device and one keyboard.
 */
var DeviceInputSystem = /** @class */ (function () {
    function DeviceInputSystem() {
    }
    /**
     * Creates a new DeviceInputSystem instance or returns existing one in engine
     * @param engine Engine to assign input system to
     * @returns The new instance
     */
    DeviceInputSystem.Create = function (engine) {
        // If running in Babylon Native, then defer to the native input system, which has the same public contract
        if (!engine.deviceInputSystem) {
            if (typeof _native !== 'undefined') {
                engine.deviceInputSystem = (_native.DeviceInputSystem) ? new NativeDeviceInputWrapper(new _native.DeviceInputSystem()) : new NativeDeviceInputWrapper();
            }
            else {
                engine.deviceInputSystem = new WebDeviceInputSystem(engine);
            }
        }
        return engine.deviceInputSystem;
    };
    return DeviceInputSystem;
}());
export { DeviceInputSystem };
//# sourceMappingURL=deviceInputSystem.js.map