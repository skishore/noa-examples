import { ShaderLanguage } from "../../Materials/shaderLanguage";
import { Nullable } from '../../types';
import { IShaderProcessor } from '../Processors/iShaderProcessor';
import { ShaderProcessingContext } from '../Processors/shaderProcessingOptions';
declare type ThinEngine = import("../thinEngine").ThinEngine;
/** @hidden */
export declare class WebGL2ShaderProcessor implements IShaderProcessor {
    shaderLanguage: ShaderLanguage;
    attributeProcessor(attribute: string): string;
    varyingProcessor(varying: string, isFragment: boolean): string;
    postProcessor(code: string, defines: string[], isFragment: boolean, processingContext: Nullable<ShaderProcessingContext>, engine: ThinEngine): string;
}
export {};
