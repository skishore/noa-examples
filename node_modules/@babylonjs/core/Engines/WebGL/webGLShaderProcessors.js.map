{"version":3,"file":"webGLShaderProcessors.js","sourceRoot":"","sources":["../../../../sourceES6/core/Engines/WebGL/webGLShaderProcessors.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAOhE,cAAc;AACd;IAAA;QACW,mBAAc,GAAG,cAAc,CAAC,IAAI,CAAC;IAahD,CAAC;IAXU,4CAAa,GAApB,UAAqB,IAAY,EAAE,OAAiB,EAAE,UAAmB,EAAE,iBAAoD,EAAE,MAAkB;QAE/I,oBAAoB;QACpB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,oBAAoB,EAAE;YACxC,iHAAiH;YACjH,IAAI,KAAK,GAAG,oDAAoD,CAAC;YACjE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;SAClC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,2BAAC;AAAD,CAAC,AAdD,IAcC","sourcesContent":["import { ShaderLanguage } from \"../../Materials/shaderLanguage\";\r\nimport { Nullable } from '../../types';\r\nimport { IShaderProcessor } from '../Processors/iShaderProcessor';\r\nimport { ShaderProcessingContext } from '../Processors/shaderProcessingOptions';\r\n\r\ndeclare type ThinEngine = import(\"../thinEngine\").ThinEngine;\r\n\r\n/** @hidden */\r\nexport class WebGLShaderProcessor implements IShaderProcessor {\r\n    public shaderLanguage = ShaderLanguage.GLSL;\r\n\r\n    public postProcessor(code: string, defines: string[], isFragment: boolean, processingContext: Nullable<ShaderProcessingContext>, engine: ThinEngine) {\r\n\r\n        // Remove extensions\r\n        if (!engine.getCaps().drawBuffersExtension) {\r\n            // even if enclosed in #if/#endif, IE11 does parse the #extension declaration, so we need to remove it altogether\r\n            var regex = /#extension.+GL_EXT_draw_buffers.+(enable|require)/g;\r\n            code = code.replace(regex, \"\");\r\n        }\r\n\r\n        return code;\r\n    }\r\n}"]}