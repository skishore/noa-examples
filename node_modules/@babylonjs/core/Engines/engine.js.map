{"version":3,"file":"engine.js","sourceRoot":"","sources":["../../../sourceES6/core/Engines/engine.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from \"../Misc/observable\";\r\nimport { Nullable } from \"../types\";\r\nimport { Scene } from \"../scene\";\r\nimport { InternalTexture } from \"../Materials/Textures/internalTexture\";\r\nimport { IOfflineProvider } from \"../Offline/IOfflineProvider\";\r\nimport { ILoadingScreen } from \"../Loading/loadingScreen\";\r\nimport { IsDocumentAvailable, IsWindowObjectExist } from \"../Misc/domManagement\";\r\nimport { EngineStore } from \"./engineStore\";\r\nimport { _WarnImport } from '../Misc/devTools';\r\nimport { WebGLPipelineContext } from './WebGL/webGLPipelineContext';\r\nimport { IPipelineContext } from './IPipelineContext';\r\nimport { ICustomAnimationFrameRequester } from '../Misc/customAnimationFrameRequester';\r\nimport { ThinEngine, EngineOptions } from './thinEngine';\r\n\r\nimport { IViewportLike, IColor4Like } from '../Maths/math.like';\r\nimport { RenderTargetTexture } from '../Materials/Textures/renderTargetTexture';\r\nimport { PerformanceMonitor } from '../Misc/performanceMonitor';\r\nimport { DataBuffer } from '../Buffers/dataBuffer';\r\nimport { PerfCounter } from '../Misc/perfCounter';\r\nimport { WebGLDataBuffer } from '../Meshes/WebGL/webGLDataBuffer';\r\nimport { Logger } from '../Misc/logger';\r\nimport { RenderTargetWrapper } from \"./renderTargetWrapper\";\r\n\r\nimport \"./Extensions/engine.alpha\";\r\nimport \"./Extensions/engine.readTexture\";\r\nimport \"./Extensions/engine.dynamicBuffer\";\r\nimport { IAudioEngine } from '../Audio/Interfaces/IAudioEngine';\r\nimport { IPointerEvent } from \"../Events/deviceInputEvents\";\r\n\r\ndeclare type IDeviceInputSystem = import(\"../DeviceInput/Interfaces/inputInterfaces\").IDeviceInputSystem;\r\ndeclare type Material = import(\"../Materials/material\").Material;\r\ndeclare type PostProcess = import(\"../PostProcesses/postProcess\").PostProcess;\r\n\r\n/**\r\n * Defines the interface used by display changed events\r\n */\r\nexport interface IDisplayChangedEventArgs {\r\n    /** Gets the vrDisplay object (if any) */\r\n    vrDisplay: Nullable<any>;\r\n    /** Gets a boolean indicating if webVR is supported */\r\n    vrSupported: boolean;\r\n}\r\n\r\n/**\r\n * Defines the interface used by objects containing a viewport (like a camera)\r\n */\r\ninterface IViewportOwnerLike {\r\n    /**\r\n     * Gets or sets the viewport\r\n     */\r\n    viewport: IViewportLike;\r\n}\r\n\r\n/**\r\n * The engine class is responsible for interfacing with all lower-level APIs such as WebGL and Audio\r\n */\r\nexport class Engine extends ThinEngine {\r\n    // Const statics\r\n\r\n    /** Defines that alpha blending is disabled */\r\n    public static readonly ALPHA_DISABLE = 0;\r\n    /** Defines that alpha blending to SRC ALPHA * SRC + DEST */\r\n    public static readonly ALPHA_ADD = 1;\r\n    /** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST */\r\n    public static readonly ALPHA_COMBINE = 2;\r\n    /** Defines that alpha blending to DEST - SRC * DEST */\r\n    public static readonly ALPHA_SUBTRACT = 3;\r\n    /** Defines that alpha blending to SRC * DEST */\r\n    public static readonly ALPHA_MULTIPLY = 4;\r\n    /** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC) * DEST */\r\n    public static readonly ALPHA_MAXIMIZED = 5;\r\n    /** Defines that alpha blending to SRC + DEST */\r\n    public static readonly ALPHA_ONEONE = 6;\r\n    /** Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST */\r\n    public static readonly ALPHA_PREMULTIPLIED = 7;\r\n    /**\r\n     * Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST\r\n     * Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA\r\n     */\r\n    public static readonly ALPHA_PREMULTIPLIED_PORTERDUFF = 8;\r\n    /** Defines that alpha blending to CST * SRC + (1 - CST) * DEST */\r\n    public static readonly ALPHA_INTERPOLATE = 9;\r\n    /**\r\n     * Defines that alpha blending to SRC + (1 - SRC) * DEST\r\n     * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA\r\n     */\r\n    public static readonly ALPHA_SCREENMODE = 10;\r\n\r\n    /** Defines that the resource is not delayed*/\r\n    public static readonly DELAYLOADSTATE_NONE = 0;\r\n    /** Defines that the resource was successfully delay loaded */\r\n    public static readonly DELAYLOADSTATE_LOADED = 1;\r\n    /** Defines that the resource is currently delay loading */\r\n    public static readonly DELAYLOADSTATE_LOADING = 2;\r\n    /** Defines that the resource is delayed and has not started loading */\r\n    public static readonly DELAYLOADSTATE_NOTLOADED = 4;\r\n\r\n    // Depht or Stencil test Constants.\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn */\r\n    public static readonly NEVER = 512;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\r\n    public static readonly ALWAYS = 519;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value */\r\n    public static readonly LESS = 513;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value */\r\n    public static readonly EQUAL = 514;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value */\r\n    public static readonly LEQUAL = 515;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value */\r\n    public static readonly GREATER = 516;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value */\r\n    public static readonly GEQUAL = 518;\r\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value */\r\n    public static readonly NOTEQUAL = 517;\r\n\r\n    // Stencil Actions Constants.\r\n    /** Passed to stencilOperation to specify that stencil value must be kept */\r\n    public static readonly KEEP = 7680;\r\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\r\n    public static readonly REPLACE = 7681;\r\n    /** Passed to stencilOperation to specify that stencil value must be incremented */\r\n    public static readonly INCR = 7682;\r\n    /** Passed to stencilOperation to specify that stencil value must be decremented */\r\n    public static readonly DECR = 7683;\r\n    /** Passed to stencilOperation to specify that stencil value must be inverted */\r\n    public static readonly INVERT = 5386;\r\n    /** Passed to stencilOperation to specify that stencil value must be incremented with wrapping */\r\n    public static readonly INCR_WRAP = 34055;\r\n    /** Passed to stencilOperation to specify that stencil value must be decremented with wrapping */\r\n    public static readonly DECR_WRAP = 34056;\r\n\r\n    /** Texture is not repeating outside of 0..1 UVs */\r\n    public static readonly TEXTURE_CLAMP_ADDRESSMODE = 0;\r\n    /** Texture is repeating outside of 0..1 UVs */\r\n    public static readonly TEXTURE_WRAP_ADDRESSMODE = 1;\r\n    /** Texture is repeating and mirrored */\r\n    public static readonly TEXTURE_MIRROR_ADDRESSMODE = 2;\r\n\r\n    /** ALPHA */\r\n    public static readonly TEXTUREFORMAT_ALPHA = 0;\r\n    /** LUMINANCE */\r\n    public static readonly TEXTUREFORMAT_LUMINANCE = 1;\r\n    /** LUMINANCE_ALPHA */\r\n    public static readonly TEXTUREFORMAT_LUMINANCE_ALPHA = 2;\r\n    /** RGB */\r\n    public static readonly TEXTUREFORMAT_RGB = 4;\r\n    /** RGBA */\r\n    public static readonly TEXTUREFORMAT_RGBA = 5;\r\n    /** RED */\r\n    public static readonly TEXTUREFORMAT_RED = 6;\r\n    /** RED (2nd reference) */\r\n    public static readonly TEXTUREFORMAT_R = 6;\r\n    /** RG */\r\n    public static readonly TEXTUREFORMAT_RG = 7;\r\n    /** RED_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RED_INTEGER = 8;\r\n    /** RED_INTEGER (2nd reference) */\r\n    public static readonly TEXTUREFORMAT_R_INTEGER = 8;\r\n    /** RG_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RG_INTEGER = 9;\r\n    /** RGB_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RGB_INTEGER = 10;\r\n    /** RGBA_INTEGER */\r\n    public static readonly TEXTUREFORMAT_RGBA_INTEGER = 11;\r\n\r\n    /** UNSIGNED_BYTE */\r\n    public static readonly TEXTURETYPE_UNSIGNED_BYTE = 0;\r\n    /** UNSIGNED_BYTE (2nd reference) */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT = 0;\r\n    /** FLOAT */\r\n    public static readonly TEXTURETYPE_FLOAT = 1;\r\n    /** HALF_FLOAT */\r\n    public static readonly TEXTURETYPE_HALF_FLOAT = 2;\r\n    /** BYTE */\r\n    public static readonly TEXTURETYPE_BYTE = 3;\r\n    /** SHORT */\r\n    public static readonly TEXTURETYPE_SHORT = 4;\r\n    /** UNSIGNED_SHORT */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT = 5;\r\n    /** INT */\r\n    public static readonly TEXTURETYPE_INT = 6;\r\n    /** UNSIGNED_INT */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INTEGER = 7;\r\n    /** UNSIGNED_SHORT_4_4_4_4 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 = 8;\r\n    /** UNSIGNED_SHORT_5_5_5_1 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 = 9;\r\n    /** UNSIGNED_SHORT_5_6_5 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_SHORT_5_6_5 = 10;\r\n    /** UNSIGNED_INT_2_10_10_10_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV = 11;\r\n    /** UNSIGNED_INT_24_8 */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_24_8 = 12;\r\n    /** UNSIGNED_INT_10F_11F_11F_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV = 13;\r\n    /** UNSIGNED_INT_5_9_9_9_REV */\r\n    public static readonly TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV = 14;\r\n    /** FLOAT_32_UNSIGNED_INT_24_8_REV */\r\n    public static readonly TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV = 15;\r\n\r\n    /** nearest is mag = nearest and min = nearest and mip = none */\r\n    public static readonly TEXTURE_NEAREST_SAMPLINGMODE = 1;\r\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\r\n    public static readonly TEXTURE_BILINEAR_SAMPLINGMODE = 2;\r\n    /** Trilinear is mag = linear and min = linear and mip = linear */\r\n    public static readonly TEXTURE_TRILINEAR_SAMPLINGMODE = 3;\r\n    /** nearest is mag = nearest and min = nearest and mip = linear */\r\n    public static readonly TEXTURE_NEAREST_NEAREST_MIPLINEAR = 8;\r\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\r\n    public static readonly TEXTURE_LINEAR_LINEAR_MIPNEAREST = 11;\r\n    /** Trilinear is mag = linear and min = linear and mip = linear */\r\n    public static readonly TEXTURE_LINEAR_LINEAR_MIPLINEAR = 3;\r\n    /** mag = nearest and min = nearest and mip = nearest */\r\n    public static readonly TEXTURE_NEAREST_NEAREST_MIPNEAREST = 4;\r\n    /** mag = nearest and min = linear and mip = nearest */\r\n    public static readonly TEXTURE_NEAREST_LINEAR_MIPNEAREST = 5;\r\n    /** mag = nearest and min = linear and mip = linear */\r\n    public static readonly TEXTURE_NEAREST_LINEAR_MIPLINEAR = 6;\r\n    /** mag = nearest and min = linear and mip = none */\r\n    public static readonly TEXTURE_NEAREST_LINEAR = 7;\r\n    /** mag = nearest and min = nearest and mip = none */\r\n    public static readonly TEXTURE_NEAREST_NEAREST = 1;\r\n    /** mag = linear and min = nearest and mip = nearest */\r\n    public static readonly TEXTURE_LINEAR_NEAREST_MIPNEAREST = 9;\r\n    /** mag = linear and min = nearest and mip = linear */\r\n    public static readonly TEXTURE_LINEAR_NEAREST_MIPLINEAR = 10;\r\n    /** mag = linear and min = linear and mip = none */\r\n    public static readonly TEXTURE_LINEAR_LINEAR = 2;\r\n    /** mag = linear and min = nearest and mip = none */\r\n    public static readonly TEXTURE_LINEAR_NEAREST = 12;\r\n\r\n    /** Explicit coordinates mode */\r\n    public static readonly TEXTURE_EXPLICIT_MODE = 0;\r\n    /** Spherical coordinates mode */\r\n    public static readonly TEXTURE_SPHERICAL_MODE = 1;\r\n    /** Planar coordinates mode */\r\n    public static readonly TEXTURE_PLANAR_MODE = 2;\r\n    /** Cubic coordinates mode */\r\n    public static readonly TEXTURE_CUBIC_MODE = 3;\r\n    /** Projection coordinates mode */\r\n    public static readonly TEXTURE_PROJECTION_MODE = 4;\r\n    /** Skybox coordinates mode */\r\n    public static readonly TEXTURE_SKYBOX_MODE = 5;\r\n    /** Inverse Cubic coordinates mode */\r\n    public static readonly TEXTURE_INVCUBIC_MODE = 6;\r\n    /** Equirectangular coordinates mode */\r\n    public static readonly TEXTURE_EQUIRECTANGULAR_MODE = 7;\r\n    /** Equirectangular Fixed coordinates mode */\r\n    public static readonly TEXTURE_FIXED_EQUIRECTANGULAR_MODE = 8;\r\n    /** Equirectangular Fixed Mirrored coordinates mode */\r\n    public static readonly TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE = 9;\r\n\r\n    // Texture rescaling mode\r\n    /** Defines that texture rescaling will use a floor to find the closer power of 2 size */\r\n    public static readonly SCALEMODE_FLOOR = 1;\r\n    /** Defines that texture rescaling will look for the nearest power of 2 size */\r\n    public static readonly SCALEMODE_NEAREST = 2;\r\n    /** Defines that texture rescaling will use a ceil to find the closer power of 2 size */\r\n    public static readonly SCALEMODE_CEILING = 3;\r\n\r\n    /**\r\n     * Returns the current npm package of the sdk\r\n     */\r\n    // Not mixed with Version for tooling purpose.\r\n    public static get NpmPackage(): string {\r\n        return ThinEngine.NpmPackage;\r\n    }\r\n\r\n    /**\r\n     * Returns the current version of the framework\r\n     */\r\n    public static get Version(): string {\r\n        return ThinEngine.Version;\r\n    }\r\n\r\n    /** Gets the list of created engines */\r\n    public static get Instances(): Engine[] {\r\n        return EngineStore.Instances;\r\n    }\r\n\r\n    /**\r\n     * Gets the latest created engine\r\n     */\r\n    public static get LastCreatedEngine(): Nullable<Engine> {\r\n        return EngineStore.LastCreatedEngine;\r\n    }\r\n\r\n    /**\r\n     * Gets the latest created scene\r\n     */\r\n    public static get LastCreatedScene(): Nullable<Scene> {\r\n        return EngineStore.LastCreatedScene;\r\n    }\r\n\r\n    /**\r\n     * Engine abstraction for createImageBitmap\r\n     * @param image source for image\r\n     * @param options An object that sets options for the image's extraction.\r\n     * @returns ImageBitmap\r\n     */\r\n    public createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap> {\r\n        return createImageBitmap(image, options);\r\n    }\r\n\r\n    /**\r\n     * Resize an image and returns the image data as an uint8array\r\n     * @param image image to resize\r\n     * @param bufferWidth destination buffer width\r\n     * @param bufferHeight destination buffer height\r\n     * @returns an uint8array containing RGBA values of bufferWidth * bufferHeight size\r\n     */\r\n    public resizeImageBitmap(image: HTMLImageElement | ImageBitmap, bufferWidth: number, bufferHeight: number): Uint8Array {\r\n        var canvas = this.createCanvas(bufferWidth, bufferHeight);\r\n        var context = canvas.getContext(\"2d\");\r\n\r\n        if (!context) {\r\n            throw new Error(\"Unable to get 2d context for resizeImageBitmap\");\r\n        }\r\n\r\n        context.drawImage(image, 0, 0);\r\n\r\n        // Create VertexData from map data\r\n        // Cast is due to wrong definition in lib.d.ts from ts 1.3 - https://github.com/Microsoft/TypeScript/issues/949\r\n        var buffer = <Uint8Array>(<any>context.getImageData(0, 0, bufferWidth, bufferHeight).data);\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * Will flag all materials in all scenes in all engines as dirty to trigger new shader compilation\r\n     * @param flag defines which part of the materials must be marked as dirty\r\n     * @param predicate defines a predicate used to filter which materials should be affected\r\n     */\r\n    public static MarkAllMaterialsAsDirty(flag: number, predicate?: (mat: Material) => boolean): void {\r\n        for (var engineIndex = 0; engineIndex < Engine.Instances.length; engineIndex++) {\r\n            var engine = Engine.Instances[engineIndex];\r\n\r\n            for (var sceneIndex = 0; sceneIndex < engine.scenes.length; sceneIndex++) {\r\n                engine.scenes[sceneIndex].markAllMaterialsAsDirty(flag, predicate);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method called to create the default loading screen.\r\n     * This can be overridden in your own app.\r\n     * @param canvas The rendering canvas element\r\n     * @returns The loading screen\r\n     */\r\n    public static DefaultLoadingScreenFactory(canvas: HTMLCanvasElement): ILoadingScreen {\r\n        throw _WarnImport(\"LoadingScreen\");\r\n    }\r\n\r\n    /**\r\n     * Method called to create the default rescale post process on each engine.\r\n     */\r\n    public static _RescalePostProcessFactory: Nullable<(engine: Engine) => PostProcess> = null;\r\n\r\n    // Members\r\n\r\n    /**\r\n     * Gets or sets a boolean to enable/disable IndexedDB support and avoid XHR on .manifest\r\n     **/\r\n    public enableOfflineSupport = false;\r\n\r\n    /**\r\n     * Gets or sets a boolean to enable/disable checking manifest if IndexedDB support is enabled (js will always consider the database is up to date)\r\n     **/\r\n    public disableManifestCheck = false;\r\n\r\n    /**\r\n     * Gets the list of created scenes\r\n     */\r\n    public scenes = new Array<Scene>();\r\n\r\n    /** @hidden */\r\n    public _virtualScenes = new Array<Scene>();\r\n\r\n    /**\r\n     * Event raised when a new scene is created\r\n     */\r\n    public onNewSceneAddedObservable = new Observable<Scene>();\r\n\r\n    /**\r\n     * Gets the list of created postprocesses\r\n     */\r\n    public postProcesses = new Array<PostProcess>();\r\n\r\n    /**\r\n     * Gets a boolean indicating if the pointer is currently locked\r\n     */\r\n    public isPointerLock = false;\r\n\r\n    /**\r\n     * Stores instance of DeviceInputSystem\r\n     */\r\n    public deviceInputSystem: IDeviceInputSystem;\r\n\r\n    // Observables\r\n\r\n    /**\r\n     * Observable event triggered each time the rendering canvas is resized\r\n     */\r\n    public onResizeObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Observable event triggered each time the canvas loses focus\r\n     */\r\n    public onCanvasBlurObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Observable event triggered each time the canvas gains focus\r\n     */\r\n    public onCanvasFocusObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Observable event triggered each time the canvas receives pointerout event\r\n     */\r\n    public onCanvasPointerOutObservable = new Observable<IPointerEvent>();\r\n\r\n    /**\r\n     * Observable raised when the engine begins a new frame\r\n     */\r\n    public onBeginFrameObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * If set, will be used to request the next animation frame for the render loop\r\n     */\r\n    public customAnimationFrameRequester: Nullable<ICustomAnimationFrameRequester> = null;\r\n\r\n    /**\r\n     * Observable raised when the engine ends the current frame\r\n     */\r\n    public onEndFrameObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Observable raised when the engine is about to compile a shader\r\n     */\r\n    public onBeforeShaderCompilationObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Observable raised when the engine has just compiled a shader\r\n     */\r\n    public onAfterShaderCompilationObservable = new Observable<Engine>();\r\n\r\n    /**\r\n     * Gets the audio engine\r\n     * @see https://doc.babylonjs.com/how_to/playing_sounds_and_music\r\n     * @ignorenaming\r\n     */\r\n    public static audioEngine: Nullable<IAudioEngine>;\r\n\r\n    /**\r\n     * Default AudioEngine factory responsible of creating the Audio Engine.\r\n     * By default, this will create a BabylonJS Audio Engine if the workload has been embedded.\r\n     */\r\n    public static AudioEngineFactory: (hostElement: Nullable<HTMLElement>, audioContext: Nullable<AudioContext>, audioDestination: Nullable<AudioDestinationNode | MediaStreamAudioDestinationNode>) => IAudioEngine;\r\n\r\n    /**\r\n     * Default offline support factory responsible of creating a tool used to store data locally.\r\n     * By default, this will create a Database object if the workload has been embedded.\r\n     */\r\n    public static OfflineProviderFactory: (urlToScene: string, callbackManifestChecked: (checked: boolean) => any, disableManifestCheck: boolean) => IOfflineProvider;\r\n\r\n    private _loadingScreen: ILoadingScreen;\r\n    private _pointerLockRequested: boolean;\r\n    private _rescalePostProcess: PostProcess;\r\n\r\n    // Deterministic lockstepMaxSteps\r\n    protected _deterministicLockstep: boolean = false;\r\n    protected _lockstepMaxSteps: number = 4;\r\n    protected _timeStep: number = 1 / 60;\r\n\r\n    protected get _supportsHardwareTextureRescaling() {\r\n        return !!Engine._RescalePostProcessFactory;\r\n    }\r\n\r\n    // FPS\r\n    private _fps = 60;\r\n    private _deltaTime = 0;\r\n\r\n    /** @hidden */\r\n    public _drawCalls = new PerfCounter();\r\n\r\n    /** Gets or sets the tab index to set to the rendering canvas. 1 is the minimum value to set to be able to capture keyboard events */\r\n    public canvasTabIndex = 1;\r\n\r\n    /**\r\n     * Turn this value on if you want to pause FPS computation when in background\r\n     */\r\n    public disablePerformanceMonitorInBackground = false;\r\n\r\n    private _performanceMonitor = new PerformanceMonitor();\r\n    /**\r\n     * Gets the performance monitor attached to this engine\r\n     * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#engineinstrumentation\r\n     */\r\n    public get performanceMonitor(): PerformanceMonitor {\r\n        return this._performanceMonitor;\r\n    }\r\n\r\n    // Focus\r\n    private _onFocus: () => void;\r\n    private _onBlur: () => void;\r\n    private _onCanvasPointerOut: (event: PointerEvent) => void;\r\n    private _onCanvasBlur: () => void;\r\n    private _onCanvasFocus: () => void;\r\n\r\n    private _onFullscreenChange: () => void;\r\n    private _onPointerLockChange: () => void;\r\n\r\n    protected _compatibilityMode = true;\r\n\r\n    /**\r\n     * (WebGPU only) True (default) to be in compatibility mode, meaning rendering all existing scenes without artifacts (same rendering than WebGL).\r\n     * Setting the property to false will improve performances but may not work in some scenes if some precautions are not taken.\r\n     * See @TODO WEBGPU DOC PAGE for more details\r\n     */\r\n    public get compatibilityMode() {\r\n        return this._compatibilityMode;\r\n    }\r\n\r\n    public set compatibilityMode(mode: boolean) {\r\n        // not supported in WebGL\r\n        this._compatibilityMode = true;\r\n    }\r\n\r\n    // Events\r\n\r\n    /**\r\n     * Gets the HTML element used to attach event listeners\r\n     * @returns a HTML element\r\n     */\r\n    public getInputElement(): Nullable<HTMLElement> {\r\n        return this._renderingCanvas;\r\n    }\r\n\r\n    /**\r\n     * Creates a new engine\r\n     * @param canvasOrContext defines the canvas or WebGL context to use for rendering. If you provide a WebGL context, Babylon.js will not hook events on the canvas (like pointers, keyboards, etc...) so no event observables will be available. This is mostly used when Babylon.js is used as a plugin on a system which already used the WebGL context\r\n     * @param antialias defines enable antialiasing (default: false)\r\n     * @param options defines further options to be sent to the getContext() function\r\n     * @param adaptToDeviceRatio defines whether to adapt to the device's viewport characteristics (default: false)\r\n     */\r\n    constructor(canvasOrContext: Nullable<HTMLCanvasElement | OffscreenCanvas | WebGLRenderingContext | WebGL2RenderingContext>, antialias?: boolean, options?: EngineOptions, adaptToDeviceRatio: boolean = false) {\r\n        super(canvasOrContext, antialias, options, adaptToDeviceRatio);\r\n\r\n        Engine.Instances.push(this);\r\n\r\n        if (!canvasOrContext) {\r\n            return;\r\n        }\r\n\r\n        this._features.supportRenderPasses = true;\r\n\r\n        options = this._creationOptions;\r\n\r\n        if ((<any>canvasOrContext).getContext) {\r\n            let canvas = <HTMLCanvasElement>canvasOrContext;\r\n\r\n            this._sharedInit(canvas, !!options.doNotHandleTouchAction, options.audioEngine!);\r\n\r\n            if (IsWindowObjectExist()) {\r\n                const anyDoc = document as any;\r\n\r\n                // Fullscreen\r\n                this._onFullscreenChange = () => {\r\n                    if (anyDoc.fullscreen !== undefined) {\r\n                        this.isFullscreen = anyDoc.fullscreen;\r\n                    } else if (anyDoc.mozFullScreen !== undefined) {\r\n                        this.isFullscreen = anyDoc.mozFullScreen;\r\n                    } else if (anyDoc.webkitIsFullScreen !== undefined) {\r\n                        this.isFullscreen = anyDoc.webkitIsFullScreen;\r\n                    } else if (anyDoc.msIsFullScreen !== undefined) {\r\n                        this.isFullscreen = anyDoc.msIsFullScreen;\r\n                    }\r\n\r\n                    // Pointer lock\r\n                    if (this.isFullscreen && this._pointerLockRequested && canvas) {\r\n                        Engine._RequestPointerlock(canvas);\r\n                    }\r\n                };\r\n\r\n                document.addEventListener(\"fullscreenchange\", this._onFullscreenChange, false);\r\n                document.addEventListener(\"mozfullscreenchange\", this._onFullscreenChange, false);\r\n                document.addEventListener(\"webkitfullscreenchange\", this._onFullscreenChange, false);\r\n                document.addEventListener(\"msfullscreenchange\", this._onFullscreenChange, false);\r\n\r\n                // Pointer lock\r\n                this._onPointerLockChange = () => {\r\n                    this.isPointerLock = (anyDoc.mozPointerLockElement === canvas ||\r\n                        anyDoc.webkitPointerLockElement === canvas ||\r\n                        anyDoc.msPointerLockElement === canvas ||\r\n                        anyDoc.pointerLockElement === canvas\r\n                    );\r\n                };\r\n\r\n                document.addEventListener(\"pointerlockchange\", this._onPointerLockChange, false);\r\n                document.addEventListener(\"mspointerlockchange\", this._onPointerLockChange, false);\r\n                document.addEventListener(\"mozpointerlockchange\", this._onPointerLockChange, false);\r\n                document.addEventListener(\"webkitpointerlockchange\", this._onPointerLockChange, false);\r\n\r\n                // Create Audio Engine if needed.\r\n                if (!Engine.audioEngine && options.audioEngine && Engine.AudioEngineFactory) {\r\n                    Engine.audioEngine = Engine.AudioEngineFactory(this.getRenderingCanvas(), this.getAudioContext(), this.getAudioDestination());\r\n                }\r\n            }\r\n\r\n            this._connectVREvents();\r\n\r\n            this.enableOfflineSupport = Engine.OfflineProviderFactory !== undefined;\r\n\r\n            this._deterministicLockstep = !!options.deterministicLockstep;\r\n            this._lockstepMaxSteps = options.lockstepMaxSteps || 0;\r\n            this._timeStep = options.timeStep || 1 / 60;\r\n\r\n        }\r\n\r\n        // Load WebVR Devices\r\n        this._prepareVRComponent();\r\n        if (options.autoEnableWebVR) {\r\n            this.initWebVR();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shared initialization across engines types.\r\n     * @param canvas The canvas associated with this instance of the engine.\r\n     * @param doNotHandleTouchAction Defines that engine should ignore modifying touch action attribute and style\r\n     * @param audioEngine Defines if an audio engine should be created by default\r\n     */\r\n    protected _sharedInit(canvas: HTMLCanvasElement, doNotHandleTouchAction: boolean, audioEngine: boolean) {\r\n        super._sharedInit(canvas, doNotHandleTouchAction, audioEngine);\r\n\r\n        this._onCanvasFocus = () => {\r\n            this.onCanvasFocusObservable.notifyObservers(this);\r\n        };\r\n\r\n        this._onCanvasBlur = () => {\r\n            this.onCanvasBlurObservable.notifyObservers(this);\r\n        };\r\n\r\n        canvas.addEventListener(\"focus\", this._onCanvasFocus);\r\n        canvas.addEventListener(\"blur\", this._onCanvasBlur);\r\n\r\n        this._onBlur = () => {\r\n            if (this.disablePerformanceMonitorInBackground) {\r\n                this._performanceMonitor.disable();\r\n            }\r\n            this._windowIsBackground = true;\r\n        };\r\n\r\n        this._onFocus = () => {\r\n            if (this.disablePerformanceMonitorInBackground) {\r\n                this._performanceMonitor.enable();\r\n            }\r\n            this._windowIsBackground = false;\r\n        };\r\n\r\n        this._onCanvasPointerOut = (ev) => {\r\n            // Check for canvas and if there is a canvas, make sure that this callback is only fired when the cursor exits the canvas\r\n            // Note: This is a workaround for a bug with Safari\r\n            let rect = this.getInputElementClientRect();\r\n\r\n            if (rect) {\r\n                let pointerX = ev.clientX - rect.left;\r\n                let pointerY = ev.clientY - rect.top;\r\n                if (pointerX < 0 || pointerX > rect.width || pointerY < 0 || pointerY > rect.height) {\r\n                    this.onCanvasPointerOutObservable.notifyObservers(ev);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (IsWindowObjectExist()) {\r\n            const hostWindow = this.getHostWindow();\r\n            if (hostWindow) {\r\n                hostWindow.addEventListener(\"blur\", this._onBlur);\r\n                hostWindow.addEventListener(\"focus\", this._onFocus);\r\n            }\r\n        }\r\n\r\n        canvas.addEventListener(\"pointerout\", this._onCanvasPointerOut);\r\n\r\n        if (!doNotHandleTouchAction) {\r\n            this._disableTouchAction();\r\n        }\r\n\r\n        // Create Audio Engine if needed.\r\n        if (!Engine.audioEngine && audioEngine && Engine.AudioEngineFactory) {\r\n            Engine.audioEngine = Engine.AudioEngineFactory(this.getRenderingCanvas(), this.getAudioContext(), this.getAudioDestination());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets current aspect ratio\r\n     * @param viewportOwner defines the camera to use to get the aspect ratio\r\n     * @param useScreen defines if screen size must be used (or the current render target if any)\r\n     * @returns a number defining the aspect ratio\r\n     */\r\n    public getAspectRatio(viewportOwner: IViewportOwnerLike, useScreen = false): number {\r\n        var viewport = viewportOwner.viewport;\r\n        return (this.getRenderWidth(useScreen) * viewport.width) / (this.getRenderHeight(useScreen) * viewport.height);\r\n    }\r\n\r\n    /**\r\n     * Gets current screen aspect ratio\r\n     * @returns a number defining the aspect ratio\r\n     */\r\n    public getScreenAspectRatio(): number {\r\n        return (this.getRenderWidth(true)) / (this.getRenderHeight(true));\r\n    }\r\n\r\n    /**\r\n     * Gets the client rect of the HTML canvas attached with the current webGL context\r\n     * @returns a client rectangle\r\n     */\r\n    public getRenderingCanvasClientRect(): Nullable<ClientRect> {\r\n        if (!this._renderingCanvas) {\r\n            return null;\r\n        }\r\n        return this._renderingCanvas.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * Gets the client rect of the HTML element used for events\r\n     * @returns a client rectangle\r\n     */\r\n    public getInputElementClientRect(): Nullable<ClientRect> {\r\n        if (!this._renderingCanvas) {\r\n            return null;\r\n        }\r\n        return this.getInputElement()!.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating that the engine is running in deterministic lock step mode\r\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\r\n     * @returns true if engine is in deterministic lock step mode\r\n     */\r\n    public isDeterministicLockStep(): boolean {\r\n        return this._deterministicLockstep;\r\n    }\r\n\r\n    /**\r\n     * Gets the max steps when engine is running in deterministic lock step\r\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\r\n     * @returns the max steps\r\n     */\r\n    public getLockstepMaxSteps(): number {\r\n        return this._lockstepMaxSteps;\r\n    }\r\n\r\n    /**\r\n     * Returns the time in ms between steps when using deterministic lock step.\r\n     * @returns time step in (ms)\r\n     */\r\n    public getTimeStep(): number {\r\n        return this._timeStep * 1000;\r\n    }\r\n\r\n    /**\r\n     * Force the mipmap generation for the given render target texture\r\n     * @param texture defines the render target texture to use\r\n     * @param unbind defines whether or not to unbind the texture after generation. Defaults to true.\r\n     */\r\n    public generateMipMapsForCubemap(texture: InternalTexture, unbind = true) {\r\n        if (texture.generateMipMaps) {\r\n            var gl = this._gl;\r\n            this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n            if (unbind) {\r\n                this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** States */\r\n\r\n    /**\r\n     * Gets a boolean indicating if depth testing is enabled\r\n     * @returns the current state\r\n     */\r\n    public getDepthBuffer(): boolean {\r\n        return this._depthCullingState.depthTest;\r\n    }\r\n\r\n    /**\r\n     * Enable or disable depth buffering\r\n     * @param enable defines the state to set\r\n     */\r\n    public setDepthBuffer(enable: boolean): void {\r\n        this._depthCullingState.depthTest = enable;\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating if depth writing is enabled\r\n     * @returns the current depth writing state\r\n     */\r\n    public getDepthWrite(): boolean {\r\n        return this._depthCullingState.depthMask;\r\n    }\r\n\r\n    /**\r\n     * Enable or disable depth writing\r\n     * @param enable defines the state to set\r\n     */\r\n    public setDepthWrite(enable: boolean): void {\r\n        this._depthCullingState.depthMask = enable;\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating if stencil buffer is enabled\r\n     * @returns the current stencil buffer state\r\n     */\r\n    public getStencilBuffer(): boolean {\r\n        return this._stencilState.stencilTest;\r\n    }\r\n\r\n    /**\r\n     * Enable or disable the stencil buffer\r\n     * @param enable defines if the stencil buffer must be enabled or disabled\r\n     */\r\n    public setStencilBuffer(enable: boolean): void {\r\n        this._stencilState.stencilTest = enable;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil mask\r\n     * @returns a number defining the new stencil mask to use\r\n     */\r\n    public getStencilMask(): number {\r\n        return this._stencilState.stencilMask;\r\n    }\r\n\r\n    /**\r\n     * Sets the current stencil mask\r\n     * @param mask defines the new stencil mask to use\r\n     */\r\n    public setStencilMask(mask: number): void {\r\n        this._stencilState.stencilMask = mask;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil function\r\n     * @returns a number defining the stencil function to use\r\n     */\r\n    public getStencilFunction(): number {\r\n        return this._stencilState.stencilFunc;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil reference value\r\n     * @returns a number defining the stencil reference value to use\r\n     */\r\n    public getStencilFunctionReference(): number {\r\n        return this._stencilState.stencilFuncRef;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil mask\r\n     * @returns a number defining the stencil mask to use\r\n     */\r\n    public getStencilFunctionMask(): number {\r\n        return this._stencilState.stencilFuncMask;\r\n    }\r\n\r\n    /**\r\n     * Sets the current stencil function\r\n     * @param stencilFunc defines the new stencil function to use\r\n     */\r\n    public setStencilFunction(stencilFunc: number) {\r\n        this._stencilState.stencilFunc = stencilFunc;\r\n    }\r\n\r\n    /**\r\n     * Sets the current stencil reference\r\n     * @param reference defines the new stencil reference to use\r\n     */\r\n    public setStencilFunctionReference(reference: number) {\r\n        this._stencilState.stencilFuncRef = reference;\r\n    }\r\n\r\n    /**\r\n     * Sets the current stencil mask\r\n     * @param mask defines the new stencil mask to use\r\n     */\r\n    public setStencilFunctionMask(mask: number) {\r\n        this._stencilState.stencilFuncMask = mask;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil operation when stencil fails\r\n     * @returns a number defining stencil operation to use when stencil fails\r\n     */\r\n    public getStencilOperationFail(): number {\r\n        return this._stencilState.stencilOpStencilFail;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil operation when depth fails\r\n     * @returns a number defining stencil operation to use when depth fails\r\n     */\r\n    public getStencilOperationDepthFail(): number {\r\n        return this._stencilState.stencilOpDepthFail;\r\n    }\r\n\r\n    /**\r\n     * Gets the current stencil operation when stencil passes\r\n     * @returns a number defining stencil operation to use when stencil passes\r\n     */\r\n    public getStencilOperationPass(): number {\r\n        return this._stencilState.stencilOpStencilDepthPass;\r\n    }\r\n\r\n    /**\r\n     * Sets the stencil operation to use when stencil fails\r\n     * @param operation defines the stencil operation to use when stencil fails\r\n     */\r\n    public setStencilOperationFail(operation: number): void {\r\n        this._stencilState.stencilOpStencilFail = operation;\r\n    }\r\n\r\n    /**\r\n     * Sets the stencil operation to use when depth fails\r\n     * @param operation defines the stencil operation to use when depth fails\r\n     */\r\n    public setStencilOperationDepthFail(operation: number): void {\r\n        this._stencilState.stencilOpDepthFail = operation;\r\n    }\r\n\r\n    /**\r\n     * Sets the stencil operation to use when stencil passes\r\n     * @param operation defines the stencil operation to use when stencil passes\r\n     */\r\n    public setStencilOperationPass(operation: number): void {\r\n        this._stencilState.stencilOpStencilDepthPass = operation;\r\n    }\r\n\r\n    /**\r\n     * Sets a boolean indicating if the dithering state is enabled or disabled\r\n     * @param value defines the dithering state\r\n     */\r\n    public setDitheringState(value: boolean): void {\r\n        if (value) {\r\n            this._gl.enable(this._gl.DITHER);\r\n        } else {\r\n            this._gl.disable(this._gl.DITHER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a boolean indicating if the rasterizer state is enabled or disabled\r\n     * @param value defines the rasterizer state\r\n     */\r\n    public setRasterizerState(value: boolean): void {\r\n        if (value) {\r\n            this._gl.disable(this._gl.RASTERIZER_DISCARD);\r\n        } else {\r\n            this._gl.enable(this._gl.RASTERIZER_DISCARD);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the current depth function\r\n     * @returns a number defining the depth function\r\n     */\r\n    public getDepthFunction(): Nullable<number> {\r\n        return this._depthCullingState.depthFunc;\r\n    }\r\n\r\n    /**\r\n     * Sets the current depth function\r\n     * @param depthFunc defines the function to use\r\n     */\r\n    public setDepthFunction(depthFunc: number) {\r\n        this._depthCullingState.depthFunc = depthFunc;\r\n    }\r\n\r\n    /**\r\n     * Sets the current depth function to GREATER\r\n     */\r\n    public setDepthFunctionToGreater(): void {\r\n        this.setDepthFunction(516);\r\n    }\r\n\r\n    /**\r\n     * Sets the current depth function to GEQUAL\r\n     */\r\n    public setDepthFunctionToGreaterOrEqual(): void {\r\n        this.setDepthFunction(518);\r\n    }\r\n\r\n    /**\r\n     * Sets the current depth function to LESS\r\n     */\r\n    public setDepthFunctionToLess(): void {\r\n        this.setDepthFunction(513);\r\n    }\r\n\r\n    /**\r\n     * Sets the current depth function to LEQUAL\r\n     */\r\n    public setDepthFunctionToLessOrEqual(): void {\r\n        this.setDepthFunction(515);\r\n    }\r\n\r\n    private _cachedStencilBuffer: boolean;\r\n    private _cachedStencilFunction: number;\r\n    private _cachedStencilMask: number;\r\n    private _cachedStencilOperationPass: number;\r\n    private _cachedStencilOperationFail: number;\r\n    private _cachedStencilOperationDepthFail: number;\r\n    private _cachedStencilReference: number;\r\n\r\n    /**\r\n     * Caches the the state of the stencil buffer\r\n     */\r\n    public cacheStencilState() {\r\n        this._cachedStencilBuffer = this.getStencilBuffer();\r\n        this._cachedStencilFunction = this.getStencilFunction();\r\n        this._cachedStencilMask = this.getStencilMask();\r\n        this._cachedStencilOperationPass = this.getStencilOperationPass();\r\n        this._cachedStencilOperationFail = this.getStencilOperationFail();\r\n        this._cachedStencilOperationDepthFail = this.getStencilOperationDepthFail();\r\n        this._cachedStencilReference = this.getStencilFunctionReference();\r\n    }\r\n\r\n    /**\r\n     * Restores the state of the stencil buffer\r\n     */\r\n    public restoreStencilState() {\r\n        this.setStencilFunction(this._cachedStencilFunction);\r\n        this.setStencilMask(this._cachedStencilMask);\r\n        this.setStencilBuffer(this._cachedStencilBuffer);\r\n        this.setStencilOperationPass(this._cachedStencilOperationPass);\r\n        this.setStencilOperationFail(this._cachedStencilOperationFail);\r\n        this.setStencilOperationDepthFail(this._cachedStencilOperationDepthFail);\r\n        this.setStencilFunctionReference(this._cachedStencilReference);\r\n    }\r\n\r\n    /**\r\n     * Directly set the WebGL Viewport\r\n     * @param x defines the x coordinate of the viewport (in screen space)\r\n     * @param y defines the y coordinate of the viewport (in screen space)\r\n     * @param width defines the width of the viewport (in screen space)\r\n     * @param height defines the height of the viewport (in screen space)\r\n     * @return the current viewport Object (if any) that is being replaced by this call. You can restore this viewport later on to go back to the original state\r\n     */\r\n    public setDirectViewport(x: number, y: number, width: number, height: number): Nullable<IViewportLike> {\r\n        let currentViewport = this._cachedViewport;\r\n        this._cachedViewport = null;\r\n\r\n        this._viewport(x, y, width, height);\r\n\r\n        return currentViewport;\r\n    }\r\n\r\n    /**\r\n     * Executes a scissor clear (ie. a clear on a specific portion of the screen)\r\n     * @param x defines the x-coordinate of the top left corner of the clear rectangle\r\n     * @param y defines the y-coordinate of the corner of the clear rectangle\r\n     * @param width defines the width of the clear rectangle\r\n     * @param height defines the height of the clear rectangle\r\n     * @param clearColor defines the clear color\r\n     */\r\n    public scissorClear(x: number, y: number, width: number, height: number, clearColor: IColor4Like): void {\r\n        this.enableScissor(x, y, width, height);\r\n        this.clear(clearColor, true, true, true);\r\n        this.disableScissor();\r\n    }\r\n\r\n    /**\r\n     * Enable scissor test on a specific rectangle (ie. render will only be executed on a specific portion of the screen)\r\n     * @param x defines the x-coordinate of the top left corner of the clear rectangle\r\n     * @param y defines the y-coordinate of the corner of the clear rectangle\r\n     * @param width defines the width of the clear rectangle\r\n     * @param height defines the height of the clear rectangle\r\n     */\r\n    public enableScissor(x: number, y: number, width: number, height: number): void {\r\n        let gl = this._gl;\r\n\r\n        // Change state\r\n        gl.enable(gl.SCISSOR_TEST);\r\n        gl.scissor(x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * Disable previously set scissor test rectangle\r\n     */\r\n    public disableScissor() {\r\n        let gl = this._gl;\r\n\r\n        gl.disable(gl.SCISSOR_TEST);\r\n    }\r\n\r\n    /** @hidden */\r\n    public _reportDrawCall(numDrawCalls = 1) {\r\n        this._drawCalls.addCount(numDrawCalls, false);\r\n    }\r\n\r\n    /**\r\n     * Initializes a webVR display and starts listening to display change events\r\n     * The onVRDisplayChangedObservable will be notified upon these changes\r\n     * @returns The onVRDisplayChangedObservable\r\n     */\r\n    public initWebVR(): Observable<IDisplayChangedEventArgs> {\r\n        throw _WarnImport(\"WebVRCamera\");\r\n    }\r\n\r\n    /** @hidden */\r\n    public _prepareVRComponent() {\r\n        // Do nothing as the engine side effect will overload it\r\n    }\r\n\r\n    /** @hidden */\r\n    public _connectVREvents(canvas?: HTMLCanvasElement, document?: any) {\r\n        // Do nothing as the engine side effect will overload it\r\n    }\r\n\r\n    /** @hidden */\r\n    public _submitVRFrame() {\r\n        // Do nothing as the engine side effect will overload it\r\n    }\r\n    /**\r\n     * Call this function to leave webVR mode\r\n     * Will do nothing if webVR is not supported or if there is no webVR device\r\n     * @see https://doc.babylonjs.com/how_to/webvr_camera\r\n     */\r\n    public disableVR() {\r\n        // Do nothing as the engine side effect will overload it\r\n    }\r\n\r\n    /**\r\n     * Gets a boolean indicating that the system is in VR mode and is presenting\r\n     * @returns true if VR mode is engaged\r\n     */\r\n    public isVRPresenting() {\r\n        return false;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _requestVRFrame() {\r\n        // Do nothing as the engine side effect will overload it\r\n    }\r\n\r\n    /** @hidden */\r\n    public _loadFileAsync(url: string, offlineProvider?: IOfflineProvider, useArrayBuffer?: boolean): Promise<string | ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            this._loadFile(url, (data) => {\r\n                resolve(data);\r\n            }, undefined, offlineProvider, useArrayBuffer, (request, exception) => {\r\n                reject(exception);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Gets the source code of the vertex shader associated with a specific webGL program\r\n    * @param program defines the program to use\r\n    * @returns a string containing the source code of the vertex shader associated with the program\r\n    */\r\n    public getVertexShaderSource(program: WebGLProgram): Nullable<string> {\r\n        var shaders = this._gl.getAttachedShaders(program);\r\n\r\n        if (!shaders) {\r\n            return null;\r\n        }\r\n\r\n        return this._gl.getShaderSource(shaders[0]);\r\n    }\r\n\r\n    /**\r\n     * Gets the source code of the fragment shader associated with a specific webGL program\r\n     * @param program defines the program to use\r\n     * @returns a string containing the source code of the fragment shader associated with the program\r\n     */\r\n    public getFragmentShaderSource(program: WebGLProgram): Nullable<string> {\r\n        var shaders = this._gl.getAttachedShaders(program);\r\n\r\n        if (!shaders) {\r\n            return null;\r\n        }\r\n\r\n        return this._gl.getShaderSource(shaders[1]);\r\n    }\r\n\r\n    /**\r\n     * Sets a depth stencil texture from a render target to the according uniform.\r\n     * @param channel The texture channel\r\n     * @param uniform The uniform to set\r\n     * @param texture The render target texture containing the depth stencil texture to apply\r\n     * @param name The texture name\r\n     */\r\n    public setDepthStencilTexture(channel: number, uniform: Nullable<WebGLUniformLocation>, texture: Nullable<RenderTargetTexture>, name?: string): void {\r\n        if (channel === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (uniform) {\r\n            this._boundUniforms[channel] = uniform;\r\n        }\r\n\r\n        if (!texture || !texture.depthStencilTexture) {\r\n            this._setTexture(channel, null, undefined, undefined, name);\r\n        }\r\n        else {\r\n            this._setTexture(channel, texture, false, true, name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets a texture to the webGL context from a postprocess\r\n     * @param channel defines the channel to use\r\n     * @param postProcess defines the source postprocess\r\n     * @param name name of the channel\r\n     */\r\n    public setTextureFromPostProcess(channel: number, postProcess: Nullable<PostProcess>, name: string): void {\r\n        let postProcessInput = null;\r\n        if (postProcess) {\r\n            if (postProcess._textures.data[postProcess._currentRenderTextureInd]) {\r\n                postProcessInput = postProcess._textures.data[postProcess._currentRenderTextureInd];\r\n            } else if (postProcess._forcedOutputTexture) {\r\n                postProcessInput = postProcess._forcedOutputTexture;\r\n            }\r\n        }\r\n\r\n        this._bindTexture(channel, postProcessInput?.texture ?? null, name);\r\n    }\r\n\r\n    /**\r\n     * Binds the output of the passed in post process to the texture channel specified\r\n     * @param channel The channel the texture should be bound to\r\n     * @param postProcess The post process which's output should be bound\r\n     * @param name name of the channel\r\n     */\r\n    public setTextureFromPostProcessOutput(channel: number, postProcess: Nullable<PostProcess>, name: string): void {\r\n        this._bindTexture(channel, postProcess?._outputTexture?.texture ?? null, name);\r\n    }\r\n\r\n    protected _rebuildBuffers(): void {\r\n        // Index / Vertex\r\n        for (var scene of this.scenes) {\r\n            scene.resetCachedMaterial();\r\n            scene._rebuildGeometries();\r\n            scene._rebuildTextures();\r\n        }\r\n\r\n        for (var scene of this._virtualScenes) {\r\n            scene.resetCachedMaterial();\r\n            scene._rebuildGeometries();\r\n            scene._rebuildTextures();\r\n        }\r\n\r\n        super._rebuildBuffers();\r\n    }\r\n\r\n    /** @hidden */\r\n    public _renderFrame() {\r\n        for (var index = 0; index < this._activeRenderLoops.length; index++) {\r\n            var renderFunction = this._activeRenderLoops[index];\r\n\r\n            renderFunction();\r\n        }\r\n    }\r\n\r\n    public _renderLoop(): void {\r\n        if (!this._contextWasLost) {\r\n            var shouldRender = true;\r\n            if (!this.renderEvenInBackground && this._windowIsBackground) {\r\n                shouldRender = false;\r\n            }\r\n\r\n            if (shouldRender) {\r\n                // Start new frame\r\n                this.beginFrame();\r\n\r\n                // Child canvases\r\n                if (!this._renderViews()) {\r\n                    // Main frame\r\n                    this._renderFrame();\r\n                }\r\n\r\n                // Present\r\n                this.endFrame();\r\n            }\r\n        }\r\n\r\n        if (this._activeRenderLoops.length > 0) {\r\n            // Register new frame\r\n            if (this.customAnimationFrameRequester) {\r\n                this.customAnimationFrameRequester.requestID = this._queueNewFrame(this.customAnimationFrameRequester.renderFunction || this._boundRenderFunction, this.customAnimationFrameRequester);\r\n                this._frameHandler = this.customAnimationFrameRequester.requestID;\r\n            } else if (this.isVRPresenting()) {\r\n                this._requestVRFrame();\r\n            } else {\r\n                this._frameHandler = this._queueNewFrame(this._boundRenderFunction, this.getHostWindow());\r\n            }\r\n        } else {\r\n            this._renderingQueueLaunched = false;\r\n        }\r\n    }\r\n\r\n    /** @hidden */\r\n    public _renderViews() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Toggle full screen mode\r\n     * @param requestPointerLock defines if a pointer lock should be requested from the user\r\n     */\r\n    public switchFullscreen(requestPointerLock: boolean): void {\r\n        if (this.isFullscreen) {\r\n            this.exitFullscreen();\r\n        } else {\r\n            this.enterFullscreen(requestPointerLock);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enters full screen mode\r\n     * @param requestPointerLock defines if a pointer lock should be requested from the user\r\n     */\r\n    public enterFullscreen(requestPointerLock: boolean): void {\r\n        if (!this.isFullscreen) {\r\n            this._pointerLockRequested = requestPointerLock;\r\n            if (this._renderingCanvas) {\r\n                Engine._RequestFullscreen(this._renderingCanvas);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exits full screen mode\r\n     */\r\n    public exitFullscreen(): void {\r\n        if (this.isFullscreen) {\r\n            Engine._ExitFullscreen();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enters Pointerlock mode\r\n     */\r\n    public enterPointerlock(): void {\r\n        if (this._renderingCanvas) {\r\n            Engine._RequestPointerlock(this._renderingCanvas);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exits Pointerlock mode\r\n     */\r\n    public exitPointerlock(): void {\r\n        Engine._ExitPointerlock();\r\n    }\r\n\r\n    /**\r\n     * Begin a new frame\r\n     */\r\n    public beginFrame(): void {\r\n        this._measureFps();\r\n\r\n        this.onBeginFrameObservable.notifyObservers(this);\r\n        super.beginFrame();\r\n    }\r\n\r\n    /**\r\n     * End the current frame\r\n     */\r\n    public endFrame(): void {\r\n        super.endFrame();\r\n        this._submitVRFrame();\r\n\r\n        this.onEndFrameObservable.notifyObservers(this);\r\n    }\r\n\r\n    /**\r\n     * Resize the view according to the canvas' size\r\n     * @param forceSetSize true to force setting the sizes of the underlying canvas\r\n     */\r\n    public resize(forceSetSize = false): void {\r\n        // We're not resizing the size of the canvas while in VR mode & presenting\r\n        if (this.isVRPresenting()) {\r\n            return;\r\n        }\r\n\r\n        super.resize(forceSetSize);\r\n    }\r\n\r\n    /**\r\n     * Force a specific size of the canvas\r\n     * @param width defines the new canvas' width\r\n     * @param height defines the new canvas' height\r\n     * @param forceSetSize true to force setting the sizes of the underlying canvas\r\n     * @returns true if the size was changed\r\n     */\r\n    public setSize(width: number, height: number, forceSetSize = false): boolean {\r\n        if (!this._renderingCanvas) {\r\n            return false;\r\n        }\r\n\r\n        if (!super.setSize(width, height, forceSetSize)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.scenes) {\r\n            for (var index = 0; index < this.scenes.length; index++) {\r\n                var scene = this.scenes[index];\r\n\r\n                for (var camIndex = 0; camIndex < scene.cameras.length; camIndex++) {\r\n                    var cam = scene.cameras[camIndex];\r\n\r\n                    cam._currentRenderId = 0;\r\n                }\r\n            }\r\n\r\n            if (this.onResizeObservable.hasObservers()) {\r\n                this.onResizeObservable.notifyObservers(this);\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public _deletePipelineContext(pipelineContext: IPipelineContext): void {\r\n        let webGLPipelineContext = pipelineContext as WebGLPipelineContext;\r\n        if (webGLPipelineContext && webGLPipelineContext.program) {\r\n            if (webGLPipelineContext.transformFeedback) {\r\n                this.deleteTransformFeedback(webGLPipelineContext.transformFeedback);\r\n                webGLPipelineContext.transformFeedback = null;\r\n            }\r\n        }\r\n        super._deletePipelineContext(pipelineContext);\r\n    }\r\n\r\n    public createShaderProgram(pipelineContext: IPipelineContext, vertexCode: string, fragmentCode: string, defines: Nullable<string>, context?: WebGLRenderingContext, transformFeedbackVaryings: Nullable<string[]> = null): WebGLProgram {\r\n        context = context || this._gl;\r\n\r\n        this.onBeforeShaderCompilationObservable.notifyObservers(this);\r\n\r\n        let program = super.createShaderProgram(pipelineContext, vertexCode, fragmentCode, defines, context, transformFeedbackVaryings);\r\n        this.onAfterShaderCompilationObservable.notifyObservers(this);\r\n\r\n        return program;\r\n    }\r\n\r\n    protected _createShaderProgram(pipelineContext: WebGLPipelineContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, context: WebGLRenderingContext, transformFeedbackVaryings: Nullable<string[]> = null): WebGLProgram {\r\n        var shaderProgram = context.createProgram();\r\n        pipelineContext.program = shaderProgram;\r\n\r\n        if (!shaderProgram) {\r\n            throw new Error(\"Unable to create program\");\r\n        }\r\n\r\n        context.attachShader(shaderProgram, vertexShader);\r\n        context.attachShader(shaderProgram, fragmentShader);\r\n\r\n        if (this.webGLVersion > 1 && transformFeedbackVaryings) {\r\n            let transformFeedback = this.createTransformFeedback();\r\n\r\n            this.bindTransformFeedback(transformFeedback);\r\n            this.setTranformFeedbackVaryings(shaderProgram, transformFeedbackVaryings);\r\n            pipelineContext.transformFeedback = transformFeedback;\r\n        }\r\n\r\n        context.linkProgram(shaderProgram);\r\n\r\n        if (this.webGLVersion > 1 && transformFeedbackVaryings) {\r\n            this.bindTransformFeedback(null);\r\n        }\r\n\r\n        pipelineContext.context = context;\r\n        pipelineContext.vertexShader = vertexShader;\r\n        pipelineContext.fragmentShader = fragmentShader;\r\n\r\n        if (!pipelineContext.isParallelCompiled) {\r\n            this._finalizePipelineContext(pipelineContext);\r\n        }\r\n\r\n        return shaderProgram;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _releaseTexture(texture: InternalTexture): void {\r\n        super._releaseTexture(texture);\r\n    }\r\n\r\n    /** @hidden */\r\n    public _releaseRenderTargetWrapper(rtWrapper: RenderTargetWrapper): void {\r\n        super._releaseRenderTargetWrapper(rtWrapper);\r\n\r\n        // Set output texture of post process to null if the framebuffer has been released/disposed\r\n        this.scenes.forEach((scene) => {\r\n            scene.postProcesses.forEach((postProcess) => {\r\n                if (postProcess._outputTexture === rtWrapper) {\r\n                    postProcess._outputTexture = null;\r\n                }\r\n            });\r\n            scene.cameras.forEach((camera) => {\r\n                camera._postProcesses.forEach((postProcess) => {\r\n                    if (postProcess) {\r\n                        if (postProcess._outputTexture === rtWrapper) {\r\n                            postProcess._outputTexture = null;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    protected static _RenderPassIdCounter = 0;\r\n    /**\r\n     * Gets or sets the current render pass id\r\n     */\r\n    public currentRenderPassId = 0;\r\n\r\n    private _renderPassNames: string[] = [\"main\"];\r\n    /**\r\n     * Gets the names of the render passes that are currently created\r\n     * @returns list of the render pass names\r\n     */\r\n    public getRenderPassNames(): string[] {\r\n        return this._renderPassNames;\r\n    }\r\n\r\n    /**\r\n     * Gets the name of the current render pass\r\n     * @returns name of the current render pass\r\n     */\r\n    public getCurrentRenderPassName(): string {\r\n        return this._renderPassNames[this.currentRenderPassId];\r\n    }\r\n\r\n    /**\r\n     * Creates a render pass id\r\n     * @param name Name of the render pass (for debug purpose only)\r\n     * @returns the id of the new render pass\r\n     */\r\n    public createRenderPassId(name?: string) {\r\n        // Note: render pass id == 0 is always for the main render pass\r\n        const id = ++Engine._RenderPassIdCounter;\r\n        this._renderPassNames[id] = name ?? \"NONAME\";\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Releases a render pass id\r\n     * @param id id of the render pass to release\r\n     */\r\n    public releaseRenderPassId(id: number): void {\r\n        this._renderPassNames[id] = undefined as any;\r\n\r\n        for (let s = 0; s < this.scenes.length; ++s) {\r\n            const scene = this.scenes[s];\r\n            for (let m = 0; m < scene.meshes.length; ++m) {\r\n                const mesh = scene.meshes[m];\r\n                if (mesh.subMeshes) {\r\n                    for (let b = 0; b < mesh.subMeshes.length; ++b) {\r\n                        const subMesh = mesh.subMeshes[b];\r\n                        subMesh._removeDrawWrapper(id);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Rescales a texture\r\n     * @param source input texture\r\n     * @param destination destination texture\r\n     * @param scene scene to use to render the resize\r\n     * @param internalFormat format to use when resizing\r\n     * @param onComplete callback to be called when resize has completed\r\n     */\r\n    public _rescaleTexture(source: InternalTexture, destination: InternalTexture, scene: Nullable<any>, internalFormat: number, onComplete: () => void): void {\r\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.LINEAR);\r\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.LINEAR);\r\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\r\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\r\n\r\n        let rtt = this.createRenderTargetTexture({\r\n            width: destination.width,\r\n            height: destination.height,\r\n        }, {\r\n            generateMipMaps: false,\r\n            type: 0,\r\n            samplingMode: 2,\r\n            generateDepthBuffer: false,\r\n            generateStencilBuffer: false\r\n        }\r\n        );\r\n\r\n        if (!this._rescalePostProcess && Engine._RescalePostProcessFactory) {\r\n            this._rescalePostProcess = Engine._RescalePostProcessFactory(this);\r\n        }\r\n\r\n        this._rescalePostProcess.externalTextureSamplerBinding = true;\r\n        this._rescalePostProcess.getEffect().executeWhenCompiled(() => {\r\n            this._rescalePostProcess.onApply = function (effect) {\r\n                effect._bindTexture(\"textureSampler\", source);\r\n            };\r\n\r\n            let hostingScene: Scene = scene;\r\n\r\n            if (!hostingScene) {\r\n                hostingScene = this.scenes[this.scenes.length - 1];\r\n            }\r\n            hostingScene.postProcessManager.directRender([this._rescalePostProcess], rtt, true);\r\n\r\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, destination, true);\r\n            this._gl.copyTexImage2D(this._gl.TEXTURE_2D, 0, internalFormat, 0, 0, destination.width, destination.height, 0);\r\n\r\n            this.unBindFramebuffer(rtt);\r\n            rtt.dispose();\r\n\r\n            if (onComplete) {\r\n                onComplete();\r\n            }\r\n        });\r\n    }\r\n\r\n    // FPS\r\n\r\n    /**\r\n     * Gets the current framerate\r\n     * @returns a number representing the framerate\r\n     */\r\n    public getFps(): number {\r\n        return this._fps;\r\n    }\r\n\r\n    /**\r\n     * Gets the time spent between current and previous frame\r\n     * @returns a number representing the delta time in ms\r\n     */\r\n    public getDeltaTime(): number {\r\n        return this._deltaTime;\r\n    }\r\n\r\n    private _measureFps(): void {\r\n        this._performanceMonitor.sampleFrame();\r\n        this._fps = this._performanceMonitor.averageFPS;\r\n        this._deltaTime = this._performanceMonitor.instantaneousFrameTime || 0;\r\n    }\r\n\r\n    /** @hidden */\r\n    public _uploadImageToTexture(texture: InternalTexture, image: HTMLImageElement | ImageBitmap, faceIndex: number = 0, lod: number = 0) {\r\n        var gl = this._gl;\r\n\r\n        var textureType = this._getWebGLTextureType(texture.type);\r\n        var format = this._getInternalFormat(texture.format);\r\n        var internalFormat = this._getRGBABufferInternalSizedFormat(texture.type, format);\r\n\r\n        var bindTarget = texture.isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\r\n\r\n        this._bindTextureDirectly(bindTarget, texture, true);\r\n        this._unpackFlipY(texture.invertY);\r\n\r\n        var target = gl.TEXTURE_2D;\r\n        if (texture.isCube) {\r\n            target = gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex;\r\n        }\r\n\r\n        gl.texImage2D(target, lod, internalFormat, format, textureType, image);\r\n        this._bindTextureDirectly(bindTarget, null, true);\r\n    }\r\n\r\n    /**\r\n     * Updates a depth texture Comparison Mode and Function.\r\n     * If the comparison Function is equal to 0, the mode will be set to none.\r\n     * Otherwise, this only works in webgl 2 and requires a shadow sampler in the shader.\r\n     * @param texture The texture to set the comparison function for\r\n     * @param comparisonFunction The comparison function to set, 0 if no comparison required\r\n     */\r\n    public updateTextureComparisonFunction(texture: InternalTexture, comparisonFunction: number): void {\r\n        if (this.webGLVersion === 1) {\r\n            Logger.Error(\"WebGL 1 does not support texture comparison.\");\r\n            return;\r\n        }\r\n\r\n        var gl = this._gl;\r\n\r\n        if (texture.isCube) {\r\n            this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, texture, true);\r\n\r\n            if (comparisonFunction === 0) {\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, 515);\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n            }\r\n            else {\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\r\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n            }\r\n\r\n            this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, null);\r\n        } else {\r\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\r\n\r\n            if (comparisonFunction === 0) {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, 515);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n            }\r\n            else {\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\r\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n            }\r\n\r\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\r\n        }\r\n\r\n        texture._comparisonFunction = comparisonFunction;\r\n    }\r\n\r\n    /**\r\n     * Creates a webGL buffer to use with instantiation\r\n     * @param capacity defines the size of the buffer\r\n     * @returns the webGL buffer\r\n     */\r\n    public createInstancesBuffer(capacity: number): DataBuffer {\r\n        var buffer = this._gl.createBuffer();\r\n\r\n        if (!buffer) {\r\n            throw new Error(\"Unable to create instance buffer\");\r\n        }\r\n\r\n        var result = new WebGLDataBuffer(buffer);\r\n        result.capacity = capacity;\r\n\r\n        this.bindArrayBuffer(result);\r\n        this._gl.bufferData(this._gl.ARRAY_BUFFER, capacity, this._gl.DYNAMIC_DRAW);\r\n\r\n        result.references = 1;\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Delete a webGL buffer used with instantiation\r\n     * @param buffer defines the webGL buffer to delete\r\n     */\r\n    public deleteInstancesBuffer(buffer: WebGLBuffer): void {\r\n        this._gl.deleteBuffer(buffer);\r\n    }\r\n\r\n    private _clientWaitAsync(sync: WebGLSync, flags = 0, interval_ms = 10): Promise<void> {\r\n        let gl = <WebGL2RenderingContext>(this._gl as any);\r\n        return new Promise((resolve, reject) => {\r\n            let check = () => {\r\n                const res = gl.clientWaitSync(sync, flags, 0);\r\n                if (res == gl.WAIT_FAILED) {\r\n                    reject();\r\n                    return;\r\n                }\r\n                if (res == gl.TIMEOUT_EXPIRED) {\r\n                    setTimeout(check, interval_ms);\r\n                    return;\r\n                }\r\n                resolve();\r\n            };\r\n\r\n            check();\r\n        });\r\n    }\r\n\r\n    /** @hidden */\r\n    public _readPixelsAsync(x: number, y: number, w: number, h: number, format: number, type: number, outputBuffer: ArrayBufferView) {\r\n        if (this._webGLVersion < 2) {\r\n            throw new Error(\"_readPixelsAsync only work on WebGL2+\");\r\n        }\r\n\r\n        let gl = <WebGL2RenderingContext>(this._gl as any);\r\n        const buf = gl.createBuffer();\r\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\r\n        gl.bufferData(gl.PIXEL_PACK_BUFFER, outputBuffer.byteLength, gl.STREAM_READ);\r\n        gl.readPixels(x, y, w, h, format, type, 0);\r\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\r\n\r\n        const sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\r\n        if (!sync) {\r\n            return null;\r\n        }\r\n\r\n        gl.flush();\r\n\r\n        return this._clientWaitAsync(sync, 0, 10).then(() => {\r\n            gl.deleteSync(sync);\r\n\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\r\n            gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, outputBuffer);\r\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\r\n            gl.deleteBuffer(buf);\r\n\r\n            return outputBuffer;\r\n        });\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.hideLoadingUI();\r\n\r\n        this.onNewSceneAddedObservable.clear();\r\n\r\n        // Release postProcesses\r\n        while (this.postProcesses.length) {\r\n            this.postProcesses[0].dispose();\r\n        }\r\n\r\n        // Rescale PP\r\n        if (this._rescalePostProcess) {\r\n            this._rescalePostProcess.dispose();\r\n        }\r\n\r\n        // Release scenes\r\n        while (this.scenes.length) {\r\n            this.scenes[0].dispose();\r\n        }\r\n\r\n        while (this._virtualScenes.length) {\r\n            this._virtualScenes[0].dispose();\r\n        }\r\n\r\n        // Release audio engine\r\n        if (Engine.Instances.length === 1 && Engine.audioEngine) {\r\n            Engine.audioEngine.dispose();\r\n            Engine.audioEngine = null;\r\n        }\r\n\r\n        //WebVR\r\n        this.disableVR();\r\n\r\n        // DeviceInputSystem\r\n        if (this.deviceInputSystem) {\r\n            this.deviceInputSystem.dispose();\r\n        }\r\n\r\n        // Events\r\n        if (IsWindowObjectExist()) {\r\n            window.removeEventListener(\"blur\", this._onBlur);\r\n            window.removeEventListener(\"focus\", this._onFocus);\r\n\r\n            if (this._renderingCanvas) {\r\n                this._renderingCanvas.removeEventListener(\"focus\", this._onCanvasFocus);\r\n                this._renderingCanvas.removeEventListener(\"blur\", this._onCanvasBlur);\r\n                this._renderingCanvas.removeEventListener(\"pointerout\", this._onCanvasPointerOut);\r\n            }\r\n\r\n            if (IsDocumentAvailable()) {\r\n                document.removeEventListener(\"fullscreenchange\", this._onFullscreenChange);\r\n                document.removeEventListener(\"mozfullscreenchange\", this._onFullscreenChange);\r\n                document.removeEventListener(\"webkitfullscreenchange\", this._onFullscreenChange);\r\n                document.removeEventListener(\"msfullscreenchange\", this._onFullscreenChange);\r\n                document.removeEventListener(\"pointerlockchange\", this._onPointerLockChange);\r\n                document.removeEventListener(\"mspointerlockchange\", this._onPointerLockChange);\r\n                document.removeEventListener(\"mozpointerlockchange\", this._onPointerLockChange);\r\n                document.removeEventListener(\"webkitpointerlockchange\", this._onPointerLockChange);\r\n            }\r\n        }\r\n\r\n        super.dispose();\r\n\r\n        // Remove from Instances\r\n        var index = Engine.Instances.indexOf(this);\r\n\r\n        if (index >= 0) {\r\n            Engine.Instances.splice(index, 1);\r\n        }\r\n\r\n        // Observables\r\n        this.onResizeObservable.clear();\r\n        this.onCanvasBlurObservable.clear();\r\n        this.onCanvasFocusObservable.clear();\r\n        this.onCanvasPointerOutObservable.clear();\r\n        this.onBeginFrameObservable.clear();\r\n        this.onEndFrameObservable.clear();\r\n    }\r\n\r\n    private _disableTouchAction(): void {\r\n        if (!this._renderingCanvas || !this._renderingCanvas.setAttribute) {\r\n            return;\r\n        }\r\n\r\n        this._renderingCanvas.setAttribute(\"touch-action\", \"none\");\r\n        this._renderingCanvas.style.touchAction = \"none\";\r\n        (this._renderingCanvas.style as any).msTouchAction = \"none\";\r\n    }\r\n\r\n    // Loading screen\r\n\r\n    /**\r\n     * Display the loading screen\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public displayLoadingUI(): void {\r\n        if (!IsWindowObjectExist()) {\r\n            return;\r\n        }\r\n        const loadingScreen = this.loadingScreen;\r\n        if (loadingScreen) {\r\n            loadingScreen.displayLoadingUI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide the loading screen\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public hideLoadingUI(): void {\r\n        if (!IsWindowObjectExist()) {\r\n            return;\r\n        }\r\n        const loadingScreen = this._loadingScreen;\r\n        if (loadingScreen) {\r\n            loadingScreen.hideLoadingUI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the current loading screen object\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public get loadingScreen(): ILoadingScreen {\r\n        if (!this._loadingScreen && this._renderingCanvas) {\r\n            this._loadingScreen = Engine.DefaultLoadingScreenFactory(this._renderingCanvas);\r\n        }\r\n        return this._loadingScreen;\r\n    }\r\n\r\n    /**\r\n     * Sets the current loading screen object\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public set loadingScreen(loadingScreen: ILoadingScreen) {\r\n        this._loadingScreen = loadingScreen;\r\n    }\r\n\r\n    /**\r\n     * Sets the current loading screen text\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public set loadingUIText(text: string) {\r\n        this.loadingScreen.loadingUIText = text;\r\n    }\r\n\r\n    /**\r\n     * Sets the current loading screen background color\r\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\r\n     */\r\n    public set loadingUIBackgroundColor(color: string) {\r\n        this.loadingScreen.loadingUIBackgroundColor = color;\r\n    }\r\n\r\n    /**\r\n     * creates and returns a new video element\r\n     * @param constraints video constraints\r\n     * @returns video element\r\n     */\r\n    public createVideoElement(constraints: MediaTrackConstraints): any {\r\n        return document.createElement(\"video\");\r\n    }\r\n\r\n    /** Pointerlock and fullscreen */\r\n\r\n    /**\r\n     * Ask the browser to promote the current element to pointerlock mode\r\n     * @param element defines the DOM element to promote\r\n     */\r\n    static _RequestPointerlock(element: HTMLElement): void {\r\n        element.requestPointerLock = element.requestPointerLock || (<any>element).msRequestPointerLock || (<any>element).mozRequestPointerLock || (<any>element).webkitRequestPointerLock;\r\n        if (element.requestPointerLock) {\r\n            element.requestPointerLock();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Asks the browser to exit pointerlock mode\r\n     */\r\n    static _ExitPointerlock(): void {\r\n        let anyDoc = document as any;\r\n        document.exitPointerLock = document.exitPointerLock || anyDoc.msExitPointerLock || anyDoc.mozExitPointerLock || anyDoc.webkitExitPointerLock;\r\n\r\n        if (document.exitPointerLock) {\r\n            document.exitPointerLock();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ask the browser to promote the current element to fullscreen rendering mode\r\n     * @param element defines the DOM element to promote\r\n     */\r\n    static _RequestFullscreen(element: HTMLElement): void {\r\n        var requestFunction = element.requestFullscreen || (<any>element).msRequestFullscreen || (<any>element).webkitRequestFullscreen || (<any>element).mozRequestFullScreen;\r\n        if (!requestFunction) { return; }\r\n        requestFunction.call(element);\r\n    }\r\n\r\n    /**\r\n     * Asks the browser to exit fullscreen mode\r\n     */\r\n    static _ExitFullscreen(): void {\r\n        let anyDoc = document as any;\r\n\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        }\r\n        else if (anyDoc.mozCancelFullScreen) {\r\n            anyDoc.mozCancelFullScreen();\r\n        }\r\n        else if (anyDoc.webkitCancelFullScreen) {\r\n            anyDoc.webkitCancelFullScreen();\r\n        }\r\n        else if (anyDoc.msCancelFullScreen) {\r\n            anyDoc.msCancelFullScreen();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get Font size information\r\n     * @param font font name\r\n     * @return an object containing ascent, height and descent\r\n     */\r\n    public getFontOffset(font: string): { ascent: number, height: number, descent: number } {\r\n        var text = document.createElement(\"span\");\r\n        text.innerHTML = \"Hg\";\r\n        text.setAttribute('style', `font: ${font} !important`);\r\n\r\n        var block = document.createElement(\"div\");\r\n        block.style.display = \"inline-block\";\r\n        block.style.width = \"1px\";\r\n        block.style.height = \"0px\";\r\n        block.style.verticalAlign = \"bottom\";\r\n\r\n        var div = document.createElement(\"div\");\r\n        div.style.whiteSpace = \"nowrap\";\r\n        div.appendChild(text);\r\n        div.appendChild(block);\r\n\r\n        document.body.appendChild(div);\r\n\r\n        var fontAscent = 0;\r\n        var fontHeight = 0;\r\n        try {\r\n            fontHeight = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\r\n            block.style.verticalAlign = \"baseline\";\r\n            fontAscent = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\r\n        } finally {\r\n            document.body.removeChild(div);\r\n        }\r\n        return { ascent: fontAscent, height: fontHeight, descent: fontHeight - fontAscent };\r\n    }\r\n}"]}