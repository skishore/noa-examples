{"version":3,"file":"engine.readTexture.js","sourceRoot":"","sources":["../../../../../sourceES6/core/Engines/WebGPU/Extensions/engine.readTexture.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAGlD,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,OAAwB,EAAE,KAAa,EAAE,MAAc,EAAE,SAAc,EAAE,KAAS,EAAE,MAAwC,EAAE,aAAoB,EAAE,gBAAwB;IAAnH,0BAAA,EAAA,aAAa,CAAC;IAAE,sBAAA,EAAA,SAAS;IAAE,uBAAA,EAAA,aAAwC;IAAE,8BAAA,EAAA,oBAAoB;IAAE,iCAAA,EAAA,wBAAwB;IAC9N,IAAI,iBAAiB,GAAG,OAAO,CAAC,gBAAyC,CAAC;IAE1E,IAAI,aAAa,EAAE;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;IAED,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,kBAAmB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,gBAAgB,CAAC,CAAC;AAC5K,CAAC,CAAC;AAEF,YAAY,CAAC,SAAS,CAAC,sBAAsB,GAAG,UAAU,OAAwB,EAAE,KAAa,EAAE,MAAc,EAAE,SAAc,EAAE,KAAS,EAAE,MAAwC,EAAE,aAAoB,EAAE,gBAAwB;IAAnH,0BAAA,EAAA,aAAa,CAAC;IAAE,sBAAA,EAAA,SAAS;IAAE,uBAAA,EAAA,aAAwC;IAAE,8BAAA,EAAA,oBAAoB;IAAE,iCAAA,EAAA,wBAAwB;IAClO,MAAM,kDAAkD,CAAC;AAC7D,CAAC,CAAC","sourcesContent":["import { InternalTexture } from \"../../../Materials/Textures/internalTexture\";\r\nimport { Nullable } from \"../../../types\";\r\nimport { WebGPUEngine } from \"../../webgpuEngine\";\r\nimport { WebGPUHardwareTexture } from \"../webgpuHardwareTexture\";\r\n\r\nWebGPUEngine.prototype._readTexturePixels = function (texture: InternalTexture, width: number, height: number, faceIndex = -1, level = 0, buffer: Nullable<ArrayBufferView> = null, flushRenderer = true, noDataConversion = false): Promise<ArrayBufferView> {\r\n    let gpuTextureWrapper = texture._hardwareTexture as WebGPUHardwareTexture;\r\n\r\n    if (flushRenderer) {\r\n        this.flushFramebuffer();\r\n    }\r\n\r\n    return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource!, 0, 0, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\r\n};\r\n\r\nWebGPUEngine.prototype._readTexturePixelsSync = function (texture: InternalTexture, width: number, height: number, faceIndex = -1, level = 0, buffer: Nullable<ArrayBufferView> = null, flushRenderer = true, noDataConversion = false): ArrayBufferView {\r\n    throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\r\n};\r\n"]}