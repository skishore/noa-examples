{"version":3,"file":"volumetricLightScatteringPass.fragment.js","sourceRoot":"","sources":["../../../sourceES6/core/Shaders/volumetricLightScatteringPass.fragment.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,IAAI,IAAI,GAAG,0CAA0C,CAAC;AACtD,IAAI,MAAM,GAAG,6TAeZ,CAAC;AAEF,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACxC,cAAc;AACd,MAAM,CAAC,IAAI,wCAAwC,GAAG,EAAE,IAAI,MAAA,EAAE,MAAM,QAAA,EAAE,CAAC","sourcesContent":["import { ShaderStore } from \"../Engines/shaderStore\";\n\nlet name = 'volumetricLightScatteringPassPixelShader';\nlet shader = `#if defined(ALPHATEST) || defined(NEED_UV)\nvarying vec2 vUV;\n#endif\n#if defined(ALPHATEST)\nuniform sampler2D diffuseSampler;\n#endif\nvoid main(void)\n{\n#if defined(ALPHATEST)\nvec4 diffuseColor=texture2D(diffuseSampler,vUV);\nif (diffuseColor.a<0.4)\ndiscard;\n#endif\ngl_FragColor=vec4(0.0,0.0,0.0,1.0);\n}\n`;\n\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var volumetricLightScatteringPassPixelShader = { name, shader };\n"]}